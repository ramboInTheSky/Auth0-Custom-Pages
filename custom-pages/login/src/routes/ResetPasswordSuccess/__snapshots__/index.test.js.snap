// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResetPasswordSuccess components should render <ResetPasswordSuccess /> correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ResetPasswordSuccess />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3>
          Thank you!
        </h3>,
        <Alert
          type="success"
        >
          Your password has been changed and you can now use it to sign in 
           
        </Alert>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Thank you!",
        },
        "ref": null,
        "rendered": "Thank you!",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            "Your password has been changed and you can now use it to sign in ",
            " ",
          ],
          "type": "success",
        },
        "ref": null,
        "rendered": Array [
          "Your password has been changed and you can now use it to sign in ",
          " ",
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3>
            Thank you!
          </h3>,
          <Alert
            type="success"
          >
            Your password has been changed and you can now use it to sign in 
             
          </Alert>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Thank you!",
          },
          "ref": null,
          "rendered": "Thank you!",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              "Your password has been changed and you can now use it to sign in ",
              " ",
            ],
            "type": "success",
          },
          "ref": null,
          "rendered": Array [
            "Your password has been changed and you can now use it to sign in ",
            " ",
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFourteenAdapter {
      "options": Object {
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
          "getChildContext": Object {
            "calledByRenderer": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
