// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RegisterSuccess components should render <RegisterSuccess /> correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RegisterSuccess />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3>
          Thank you
        </h3>,
        <h5>
          We've sent you an email with an activation link. To verify your details and start using your account, click on the link.
        </h5>,
        <Alert
          type="caution"
        >
          Note: check your spam folder if you do not receive the activation email.
        </Alert>,
        <p>
          <a
            href="#"
          >
            ← Take me back to Login
          </a>
        </p>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Thank you",
        },
        "ref": null,
        "rendered": "Thank you",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "We've sent you an email with an activation link. To verify your details and start using your account, click on the link.",
        },
        "ref": null,
        "rendered": "We've sent you an email with an activation link. To verify your details and start using your account, click on the link.",
        "type": "h5",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Note: check your spam folder if you do not receive the activation email.",
          "type": "caution",
        },
        "ref": null,
        "rendered": "Note: check your spam folder if you do not receive the activation email.",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <a
            href="#"
          >
            ← Take me back to Login
          </a>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "← Take me back to Login",
            "href": "#",
          },
          "ref": null,
          "rendered": "← Take me back to Login",
          "type": "a",
        },
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3>
            Thank you
          </h3>,
          <h5>
            We've sent you an email with an activation link. To verify your details and start using your account, click on the link.
          </h5>,
          <Alert
            type="caution"
          >
            Note: check your spam folder if you do not receive the activation email.
          </Alert>,
          <p>
            <a
              href="#"
            >
              ← Take me back to Login
            </a>
          </p>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Thank you",
          },
          "ref": null,
          "rendered": "Thank you",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "We've sent you an email with an activation link. To verify your details and start using your account, click on the link.",
          },
          "ref": null,
          "rendered": "We've sent you an email with an activation link. To verify your details and start using your account, click on the link.",
          "type": "h5",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Note: check your spam folder if you do not receive the activation email.",
            "type": "caution",
          },
          "ref": null,
          "rendered": "Note: check your spam folder if you do not receive the activation email.",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <a
              href="#"
            >
              ← Take me back to Login
            </a>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "← Take me back to Login",
              "href": "#",
            },
            "ref": null,
            "rendered": "← Take me back to Login",
            "type": "a",
          },
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFourteenAdapter {
      "options": Object {
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
          "getChildContext": Object {
            "calledByRenderer": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
