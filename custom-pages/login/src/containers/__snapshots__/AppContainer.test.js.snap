// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppContainer components should render <AppContainer /> correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AppContainer
    history={Object {}}
    routerKey={1}
    routes={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Router
        history={Object {}}
        render={[Function]}
      >
        Object {}
      </Router>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": "1",
      "nodeType": "class",
      "props": Object {
        "children": Object {},
        "history": Object {},
        "render": [Function],
      },
      "ref": null,
      "rendered": Object {},
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Router
          history={Object {}}
          render={[Function]}
        >
          Object {}
        </Router>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": "1",
        "nodeType": "class",
        "props": Object {
          "children": Object {},
          "history": Object {},
          "render": [Function],
        },
        "ref": null,
        "rendered": Object {},
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFourteenAdapter {
      "options": Object {
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
          "getChildContext": Object {
            "calledByRenderer": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
